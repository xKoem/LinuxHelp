#!/bin/zsh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.


green="\u001B[92m\u001B[1m"
red="\u001B[31m\u001B[1m"
blue="\u001B[94m\u001B[1m"
yellow="\u001B[93m\u001B[1m"

creset="\u001B[0m"


if [ "$(git branch | grep '*')" = "* master" ]
then
	echo "[${red}ERROR$creset]$red ARE YOU MAD?! DO NOT COMMIT TO MASTER!!!!$creset"
	exit 1
fi
# check comments
if comments="$(grep -rni '//' ./*/src)"
then
	echo $comments
	comments="$(echo $comments | wc -l)"
	echo "[${red}WARNING$creset]$yellow YOU HAVE $comments COMMENTS IN YOU CODE. DO YOU REALLY WANT TO COMMIT? [y/n]$creset"
	vared -c ci
	if [ "$ci" = "y" ] 
		then
			echo
		else
			exit 1
	fi 
fi

#check System.outs
if souts="$(grep -rni 'System.out' ./*/src)"
then
	echo $souts
	souts="$(echo $souts | wc -l)"
	echo "[${red}WARNING$creset]$yellow YOU HAVE $souts System.outs IN YOU CODE. DO YOU REALLY WANT TO COMMIT? [y/n]$creset"
	vared -c ci
	if [ "$ci" = "y" ]
		then
			echo
		else
			exit 1
	fi
fi

if mvn clean install  
then
	echo ""
else
	echo "[${red}ERROR$creset]$red BUILD FAILED - NOT COMMITED$creset"	
	exit 1
fi

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
	# Note that the use of brackets around a tr range is ok here, (it's
	# even required, for portability to Solaris 10's /usr/bin/tr), since
	# the square bracket bytes happen to fall in the designated range.
	test $(git diff --cached --name-only --diff-filter=A -z $against |
	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
	cat <<\EOF
Error: Attempt to add a non-ASCII file name.
This can cause problems if you want to work with people on other platforms.
To be portable it is advisable to rename the file.
If you know what you are doing you can disable this check using:
  git config hooks.allownonascii true
EOF
	exit 1
fi

# If there are whitespace errors, print the offending file names and fail.
if git diff-index --check --cached $against --
then
	echo "[${blue}INFO$creset]$green READY TO BE COMMITED$creset"
else
	echo "[${red}ERROR$creset]$red NOT COMMITED$creset" 
	exit 1
fi

echo "[${blue}INFO$creset]$yellow TODO:$creset"
if grep -rni 'todo' ./*/src
then
	echo ""
else
	echo "[${blue}INFO$creset]$green NO TODOS$creset"
fi
